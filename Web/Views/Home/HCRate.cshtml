@{
    ViewBag.Title = "HC Position Ratio";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using WarehouseLaborEfficiencyWeb.DAL

<div class="row InfoHead">
    <div class="col-md-9">
        <h3>
            @ViewBag.Title
        </h3>
    </div>
</div>


<div class="wrapper">
    @using (Html.BeginForm("QueryHCRate", "Query",
                            FormMethod.Post, new { @id = "frmQueryHCRate" }))
    {
        <div class="row">
            <div class="col-md-8">
                <span class="my-bigger">Month</span>
                <span>
                    <select id="idSelMonth" name="selMonth" required>
                        <option></option>
                    </select>
                </span>
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                <button class="btn btn-info btn-sm" type="submit" id="btnQuery">Query</button>
                @*@if (CommonInfo.HasRight(TRightID.DOWNLOAD))
                {
                    <button class="btn btn-info btn-sm" type="button" id="btnDownload">Download</button>
                }*@
            </div>
            <div class="col-md-4">
            </div>
        </div>
    }
</div>

<div class="container" id="idChartCont" style="width: 1200px;margin-left: -40px;">
</div>



@section Scripts{
    <script>
        $(function () {
            InitData();
        });

        function InitData() {
            $("#frmQueryHCRate").validate();
            //$("#btnDownload").click(function () {
            //    DownloadData('HCRate', $("#frmQueryHCRate"));
            //});

            var url = "@Url.Action("GetHCRateMonth", "Query")";
            AjaxPost(url,
                "{}",
                true,
                function (result) {
                    var monthList = result.data || [];
                    $("#idSelMonth").select2({
                        data: monthList,
                        placeholder: "choose month...",
                        width: "55%"
                    });
                });

            $('#frmQueryHCRate').on('submit', function (e) {
                if (e.isDefaultPrevented()) {
                    //invalid
                    return false;
                } else {
                    var url = $(this).attr("action");
                    AjaxPostForm(url, '#frmQueryHCRate', true, function (resp) {
                        if (resp.bok) {
                            ViewCharts(resp.data);
                        } else {
                            BootstrapDialog.alert("查询失败:<br>" + resp.msg);
                        }
                    },
                    undefined,
                    function () {
                        showBusyLoading(true);
                    },
                    function () {
                        showBusyLoading(false);
                    });
                }
                return false;
            });
        }

        //function DoQueryAll() {
        //    var $ctlSelBu = $('#idSelBu');
        //    $ctlSelBu.find('option').prop('selected', 'selected');
        //    $ctlSelBu.trigger('change');
        //    $("#btnQuery").click();
        //}
        function CreateCharts(items) {
            var sChart = '';
            for (var i = 0; i < items.length; i++) {
                var bRow = 0 == i % 2;
                var chartHead = bRow ? '<div class="wrapper" style="margin-top:18px;"><div class="row">' : '';
                var chartBegin = '<div class="col-md-6"><div id="idChart_';
                var chartEnd = '" style="height:400px;"></div></div>';
                var chartDesc = '';
                var charTail = !bRow ? '</div></div>' : '';
                sChart += chartHead + chartBegin + items[i].name + chartEnd + chartDesc + charTail;
            }
            var $cont = $('#idChartCont');
            $cont.empty();
            $cont.append(sChart);
        }
        function ViewCharts(items) {
            if (!items || 0 == items.Length) {
                return;
            }
            
            //chartHead += name;
            CreateCharts(items);
            $.each(items, function (ind, val) {
                RefreshChart(val.name, val.entry);
            });
        }

        function GetBarColors() {
            return [
                '#c23531', '#2f4554', '#0033CC',
                '#00A900', '#FF00CC', '#FFCC00',
                '#0D29F2'
            ];
        }

        function MakeChartData(itemData) {
            var dat = [];
            $.each(itemData.kinds, function (ind, val) {
                dat.push({
                    name: val,
                    value: itemData.data[val]
                });
            });

            return {
                'cols': itemData.kinds,
                'charData': dat
            }
        }
        function RefreshChart(name, itemData) {
            var cd = MakeChartData(itemData);
            var option = {
                title: {
                    text: name + " (G1-G7)",
                    textStyle: {
                        fontSize: 16
                    },
                    x: 'center'
                },
                color: GetBarColors(),
                tooltip: {
                    trigger: 'item',
                    formatter: "{b} :<br/> {c} ({d}%)"
                },
                legend: {
                    type: 'scroll',
                    orient: 'vertical',
                    right: 16,
                    top: '25%',
                    //bottom: 20,
                    data: cd.cols,
                    selected: cd.cols
                },
                series: [
                    {
                        name: '',
                        type: 'pie',
                        radius: '50%',
                        center: ['40%', '50%'],
                        data: cd.charData,
                        itemStyle: {
                            emphasis: {
                                shadowBlur: 10,
                                shadowOffsetX: 0,
                                shadowColor: 'rgba(0, 0, 0, 0.5)'
                            }
                        },
                        label: {
                            normal: {
                                formatter: '{b| {b} }\n{hr|}\n{c} {per|{d}%}',
                                backgroundColor: '#eee',
                                borderColor: '#aaa',
                                borderWidth: 1,
                                borderRadius: 4,
                                rich: {                                   
                                    b: {
                                        fontSize: 12,
                                        lineHeight: 20,
                                    },
                                    hr: {
                                        borderColor: '#aaa',
                                        width: '100%',
                                        borderWidth: 0.5,
                                        height: 0
                                    },
                                    per: {
                                        color: '#eee',
                                        backgroundColor: '#334455',
                                        padding: [2, 4],
                                        borderRadius: 2
                                    }
                                }
                            }
                        }
                    }
                ]
            };

            var weekChart = echarts.init(document.getElementById("idChart_"+name));
            weekChart.setOption(option);
        }

    </script>
}

