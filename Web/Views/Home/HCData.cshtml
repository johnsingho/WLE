@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row InfoHead">
    <div class="col-md-9">
        <h2>
            HC tabula
        </h2>
    </div>
</div>


<div class="wrapper">
    @using (Html.BeginForm("QueryHCData", "Query",
                           FormMethod.Post, new { @id = "frmQueryHCData" }))
    {
        <div class="row">
            <div class="col-md-8">
                <span>WareHouse</span>
                <span>
                    <select id="idSelBu" name="bu" required multiple>
                        <option></option>
                        <option>All</option>
                    </select>
                </span>
            </div>
            <div class="col-md-4">
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                <button class="btn btn-info" type="submit">Query</button>
                <button class="btn btn-info" type="button" id="btnDownload">Download</button>
            </div>
        </div>
    }
</div>

<div class="container" id="idChartCont">
</div>



@section Scripts{
    <script>
        var weekChart=null;
        var weekData =null;

        $(function () {
            InitData();
            
        });

        function InitData() {
            $("#frmQueryHCData").validate();
            $("#btnDownload").click(function () {
                DownloadData('HCData', $("#frmQueryHCData"));
            });
            var url = "@Url.Action("GetWarehouseInfo", "Query")";
            AjaxPost(url,
                "{}",
                true,
                function (result) {
                    var warehouseList = result.data || [];
                    $("#idSelBu").select2({
                        data: warehouseList,
                        placeholder: "choose a warehouse...",
                        width: "55%"
                    });
                    
                });

            $('#frmQueryHCData').on('submit', function (e) {
                if (e.isDefaultPrevented()) {
                    //invalid
                    return false;
                } else {
                    var url = $(this).attr("action");
                    AjaxPostForm(url, '#frmQueryHCData', true, function (resp) {
                        if (resp.bok) {
                            ViewCharts(resp.data);
                        } else {
                            BootstrapDialog.alert("查询失败:<br>" + resp.msg);
                        }
                    },
                    undefined,
                    function () {
                        showBusyLoading(true);
                    },
                    function () {
                        showBusyLoading(false);
                    });
                }
                return false;
            });
        }

        function CreateAChart(name) {
            var chartHead = '<div class="wrapper" style="margin-top:10px;"><div class="row"><div id="idChart_';
            var charTail = '" style="height:520px;"></div></div></div>';
            return chartHead + name + charTail;
        }
        function ViewCharts(items) {
            if (!items || 0 == items.Length) {
                return;
            }            
            var $cont = $('#idChartCont');
            $cont.empty();
            //chartHead += name;
            $.each(items, function (ind, val) {
                var name = val.name;
                $cont.append(CreateAChart(name));
            });

            $.each(items, function (ind, val) {
                RefreshChart(val.name, val.entry);
            });
        }

        function MakexAxis(cols) {
            var xCols = [];
            $.each(cols, function (index, value) {
                var tVal = value.data;
                xCols.push(value.data);
            });
            return xCols.slice(1);
        }
        function MakeChartData(itemData) {
            var chartData = [];
            var cols = [];
            var details = itemData.data;
            $.each(details, function (index, value) {
                var vArr = MakeValueArr(value);
                var item = vArr[0];
                cols.push(item)
                var objChart = {
                    'name': item,
                    'type': 'bar',
                    'barGap': '0',
                    'data': vArr.slice(1)
                };
                chartData.push(objChart);
            });
            return {
                'cols': cols,
                'kinds': itemData.kinds,
                'charData': chartData
            }
        }
        function RefreshChart(name, itemData) {
            var cd = MakeChartData(itemData);
            //var xCols = MakexAxis(cd.cols);
            var option = {
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {
                        type: 'shadow'
                    }
                },
                color: GetMyChartColors(),
                title: {
                    text: name,
                    left: 'center'                
                },
                legend: {
                    data: cd.cols,
                    right: '20px',
                    align: 'right',
                    orient: 'vertical',
                    x: 'right', y: 'center',
                    textStyle: {
                        fontWeight: 'bold'
                    },
                },
                grid: {
                    left: '2%',
                    right: '11%',
                    bottom: '2%',
                    containLabel: true
                },
                xAxis: [
                    {
                        type: 'category',
                        data: cd.kinds
                    }
                ],
                yAxis: [
                    {
                        type: 'value'
                    }
                ],
                series: cd.charData
            };

            var weekChart = echarts.init(document.getElementById("idChart_"+name));
            weekChart.setOption(option);

        }

    </script>
}



